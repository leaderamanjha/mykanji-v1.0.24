import 'controller/logintwo_controller.dart';import 'package:flutter/material.dart';import 'package:mykanji/core/app_export.dart';import 'package:mykanji/core/utils/validation_functions.dart';import 'package:mykanji/data/models/authLoginPost/post_auth_login_post_req.dart';import 'package:mykanji/data/models/authLoginPost/post_auth_login_post_resp.dart';
// ignore_for_file: must_be_immutable
class LogintwoScreen extends GetWidget<LogintwoController> {LogintwoScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, backgroundColor: theme.colorScheme.onErrorContainer.withOpacity(1), body: SizedBox(width: SizeUtils.width, child: SingleChildScrollView(padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom), child: Form(key: _formKey, child: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 20.h, vertical: 40.v), child: Column(children: [CustomImageView(imagePath: ImageConstant.imgLogo, height: 80.adaptSize, width: 80.adaptSize), SizedBox(height: 42.v), Text("lbl_log_in2".tr, style: CustomTextStyles.titleLargeSFPro), SizedBox(height: 39.v), _buildInputWithLabel(), SizedBox(height: 12.v), _buildInputWithLabel1(), SizedBox(height: 14.v), Align(alignment: Alignment.centerLeft, child: GestureDetector(onTap: () {onTapTxtSignInWithOTP();}, child: Text("msg_sign_in_with_otp".tr, style: CustomTextStyles.bodyMediumSFProBlue300))), SizedBox(height: 39.v), _buildSubmit(), SizedBox(height: 41.v), GestureDetector(onTap: () {onTapTxtForgotYourPassword();}, child: Text("msg_forgot_your_password".tr, style: CustomTextStyles.bodyLargeSFProBlack900)), SizedBox(height: 41.v), _buildFrame(), SizedBox(height: 23.v), _buildSocialButtons(), SizedBox(height: 24.v), Row(mainAxisAlignment: MainAxisAlignment.center, children: [Padding(padding: EdgeInsets.only(bottom: 1.v), child: Text("msg_don_t_have_an_account".tr, style: CustomTextStyles.bodyLargeSFProBlack900)), GestureDetector(onTap: () {onTapTxtSignUp();}, child: Padding(padding: EdgeInsets.only(left: 6.h), child: Text("lbl_sign_up".tr, style: CustomTextStyles.titleMediumSFProBlue300.copyWith(decoration: TextDecoration.underline))))]), SizedBox(height: 9.v)]))))))); } 
/// Section Widget
Widget _buildEmail() { return Container(width: 388.h, child: TextFormField(focusNode: FocusNode(), autofocus: true, controller: controller.emailController, style: CustomTextStyles.bodyLargeSFProPrimaryContainer_1, keyboardType: TextInputType.emailAddress, decoration: InputDecoration(hintText: "msg_siddarthaj23_gmail_com".tr, hintStyle: CustomTextStyles.bodyLargeSFProPrimaryContainer_1, enabledBorder: OutlineInputBorder(borderRadius: BorderRadius.circular(8.h), borderSide: BorderSide(color: appTheme.blueGray10001, width: 1)), focusedBorder: OutlineInputBorder(borderRadius: BorderRadius.circular(8.h), borderSide: BorderSide(color: appTheme.blueGray10001, width: 1)), disabledBorder: OutlineInputBorder(borderRadius: BorderRadius.circular(8.h), borderSide: BorderSide(color: appTheme.blueGray10001, width: 1)), border: OutlineInputBorder(borderRadius: BorderRadius.circular(8.h), borderSide: BorderSide(color: appTheme.blueGray10001, width: 1)), prefixIcon: Container(margin: EdgeInsets.fromLTRB(14.h, 10.v, 8.h, 10.v), child: CustomImageView(imagePath: ImageConstant.imgMail, height: 20.adaptSize, width: 20.adaptSize)), prefixIconConstraints: BoxConstraints(maxHeight: 41.v), filled: true, fillColor: theme.colorScheme.onErrorContainer.withOpacity(1), isDense: true, contentPadding: EdgeInsets.only(top: 10.v, right: 30.h, bottom: 10.v)), validator: (value) {if (value == null || (!isValidEmail(value, isRequired: true))) {return "err_msg_please_enter_valid_email".tr;} return null;})); } 
/// Section Widget
Widget _buildInputWithLabel() { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("msg_phone_number_e_mail".tr, style: theme.textTheme.bodySmall), SizedBox(height: 5.v), _buildEmail()]); } 
/// Section Widget
Widget _buildPassword() { return Container(width: 388.h, child: Obx(() => TextFormField(focusNode: FocusNode(), autofocus: true, controller: controller.passwordController, style: CustomTextStyles.bodyLargeSFProPrimaryContainer_1, textInputAction: TextInputAction.done, keyboardType: TextInputType.visiblePassword, obscureText: controller.isShowPassword.value, decoration: InputDecoration(hintText: "lbl_opksdgb245w".tr, hintStyle: CustomTextStyles.bodyLargeSFProPrimaryContainer_1, enabledBorder: OutlineInputBorder(borderRadius: BorderRadius.circular(8.h), borderSide: BorderSide(color: appTheme.blueGray10001, width: 1)), focusedBorder: OutlineInputBorder(borderRadius: BorderRadius.circular(8.h), borderSide: BorderSide(color: appTheme.blueGray10001, width: 1)), disabledBorder: OutlineInputBorder(borderRadius: BorderRadius.circular(8.h), borderSide: BorderSide(color: appTheme.blueGray10001, width: 1)), border: OutlineInputBorder(borderRadius: BorderRadius.circular(8.h), borderSide: BorderSide(color: appTheme.blueGray10001, width: 1)), prefixIcon: Container(margin: EdgeInsets.fromLTRB(14.h, 10.v, 8.h, 10.v), child: CustomImageView(imagePath: ImageConstant.imgPassword, height: 20.adaptSize, width: 20.adaptSize)), prefixIconConstraints: BoxConstraints(maxHeight: 41.v), suffixIcon: InkWell(onTap: () {controller.isShowPassword.value = !controller.isShowPassword.value;}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 12.v, 14.h, 12.v), child: CustomImageView(imagePath: ImageConstant.imgEyeOpen, height: 16.adaptSize, width: 16.adaptSize))), suffixIconConstraints: BoxConstraints(maxHeight: 41.v), filled: true, fillColor: theme.colorScheme.onErrorContainer.withOpacity(1), isDense: true, contentPadding: EdgeInsets.symmetric(vertical: 10.v)), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}))); } 
/// Section Widget
Widget _buildInputWithLabel1() { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_password".tr, style: theme.textTheme.bodySmall), SizedBox(height: 6.v), _buildPassword()]); } 
/// Section Widget
Widget _buildSubmit() { return GestureDetector(onTap: () {onTapBtnSubmit();}, child: Container(padding: EdgeInsets.symmetric(horizontal: 30.h, vertical: 12.v), width: SizeUtils.width, decoration: BoxDecoration(color: theme.colorScheme.onPrimary, borderRadius: BorderRadius.circular(8.h), boxShadow: [BoxShadow(color: theme.colorScheme.primary, spreadRadius: 2.h, blurRadius: 2.h, offset: Offset(0, 1))]), child: Text("lbl_submit".tr, style: CustomTextStyles.titleMediumSFProOnErrorContainer))); } 
/// Section Widget
Widget _buildFrame() { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(top: 8.v, bottom: 10.v), child: SizedBox(width: 174.h, child: Divider(height: 1.v, thickness: 1.v, color: appTheme.gray800))), Text("lbl_or".tr, style: CustomTextStyles.bodyLargeSFProGray800), Padding(padding: EdgeInsets.only(top: 8.v, bottom: 10.v), child: SizedBox(width: 174.h, child: Divider(height: 1.v, thickness: 1.v, color: appTheme.gray800)))]); } 
/// Section Widget
Widget _buildSignInWithGoogle() { return Container(padding: EdgeInsets.only(top: 11.v, right: 30.h, bottom: 11.v), width: SizeUtils.width, decoration: BoxDecoration(color: theme.colorScheme.onErrorContainer.withOpacity(1), borderRadius: BorderRadius.circular(8.h), border: Border.all(color: appTheme.blueGray10001, width: 1.h), boxShadow: [BoxShadow(color: theme.colorScheme.primary, spreadRadius: 2.h, blurRadius: 2.h, offset: Offset(0, 1))]), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Container(margin: EdgeInsets.only(right: 12.h), child: CustomImageView(imagePath: ImageConstant.imgSocialIcon, height: 24.adaptSize, width: 24.adaptSize)), Text("msg_sign_in_with_google".tr, style: CustomTextStyles.titleMediumSFProBluegray80001)])); } 
/// Section Widget
Widget _buildSignInWithFacebook() { return Container(padding: EdgeInsets.only(top: 11.v, right: 30.h, bottom: 11.v), width: SizeUtils.width, decoration: BoxDecoration(color: appTheme.blueA400, borderRadius: BorderRadius.circular(8.h), boxShadow: [BoxShadow(color: theme.colorScheme.primary, spreadRadius: 2.h, blurRadius: 2.h, offset: Offset(0, 1))]), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Container(margin: EdgeInsets.only(right: 12.h), child: CustomImageView(imagePath: ImageConstant.imgSocialIconOnerrorcontainer, height: 24.adaptSize, width: 24.adaptSize)), Text("msg_sign_in_with_facebook".tr, style: CustomTextStyles.titleMediumSFProOnErrorContainer)])); } 
/// Section Widget
Widget _buildSignInWithApple() { return Container(padding: EdgeInsets.only(top: 11.v, right: 30.h, bottom: 11.v), width: SizeUtils.width, decoration: BoxDecoration(color: appTheme.black900, borderRadius: BorderRadius.circular(8.h), boxShadow: [BoxShadow(color: theme.colorScheme.primary, spreadRadius: 2.h, blurRadius: 2.h, offset: Offset(0, 1))]), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Container(margin: EdgeInsets.only(right: 12.h), child: CustomImageView(imagePath: ImageConstant.imgAppleSocialIcon, height: 24.adaptSize, width: 24.adaptSize)), Text("msg_sign_in_with_apple".tr, style: CustomTextStyles.titleMediumSFProOnErrorContainer)])); } 
/// Section Widget
Widget _buildSocialButtons() { return Column(children: [_buildSignInWithGoogle(), SizedBox(height: 12.v), _buildSignInWithFacebook(), SizedBox(height: 12.v), _buildSignInWithApple()]); } 
/// Navigates to the loginwithnumberScreen when the action is triggered.
onTapTxtSignInWithOTP() { Get.toNamed(AppRoutes.loginwithnumberScreen, ); } 
/// calls the [http://103.160.107.21:3000/auth/login] API 
///
/// validates the form input fields and executes the API if all the fields are valid
/// It has [PostAuthLoginPostReq] as a parameter which will be passed as a API request body
/// If the call is successful, the function calls the `_onLoginSuccess()` function.
/// If the call fails, the function calls the `_onLoginError()` function.
///
/// Throws a `NoInternetException` if there is no internet connection.
Future<void> onTapBtnSubmit() async  { if(_formKey.currentState!.validate()) {PostAuthLoginPostReq postAuthLoginPostReq = PostAuthLoginPostReq(userName : controller.emailController.text,password : controller.passwordController.text,);try {
await controller.callAuthLoginPost(postAuthLoginPostReq.toJson(),);_onLoginSuccess();} on PostAuthLoginPostResp {_onLoginError();} on NoInternetException catch (e) {Get.rawSnackbar(message: e.toString());} catch (e) {
 //TODO: Handle generic errors
}} } 
/// Navigates to the homeScreen when the action is triggered.
void _onLoginSuccess() { Get.toNamed(AppRoutes.homeScreen, ); } 
/// Displays an alert dialog when the action is triggered.
/// The dialog box contains a title and a message with the `Retry`
void _onLoginError() { 

Get.defaultDialog( onConfirm: () => Get.back(), title: "Failed", middleText: "Retry"); } 
/// Navigates to the forgotpasswordScreen when the action is triggered.
onTapTxtForgotYourPassword() { Get.toNamed(AppRoutes.forgotpasswordScreen, ); } 
/// Navigates to the signUpOneScreen when the action is triggered.
onTapTxtSignUp() { Get.toNamed(AppRoutes.signUpOneScreen, ); } 
 }
